/*
 * Golem Gateway API
 *
 * Golem Brass Gateway API for Golem Unlimited
 *
 * OpenAPI spec version: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

/// SubtaskResult : Subtask computation result

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SubtaskResult {
    #[serde(rename = "status")]
    status: String,
    /// failure reason
    #[serde(rename = "reason")]
    reason: Option<String>,
    #[serde(rename = "path")]
    path: String,
}

impl SubtaskResult {
    /// Subtask computation result
    pub fn new(status: String, path: String) -> SubtaskResult {
        SubtaskResult {
            status: status,
            reason: None,
            path: path,
        }
    }

    pub fn set_status(&mut self, status: String) {
        self.status = status;
    }

    pub fn with_status(mut self, status: String) -> SubtaskResult {
        self.status = status;
        self
    }

    pub fn status(&self) -> &String {
        &self.status
    }

    pub fn set_reason(&mut self, reason: String) {
        self.reason = Some(reason);
    }

    pub fn with_reason(mut self, reason: String) -> SubtaskResult {
        self.reason = Some(reason);
        self
    }

    pub fn reason(&self) -> Option<&String> {
        self.reason.as_ref()
    }

    pub fn reset_reason(&mut self) {
        self.reason = None;
    }

    pub fn set_path(&mut self, path: String) {
        self.path = path;
    }

    pub fn with_path(mut self, path: String) -> SubtaskResult {
        self.path = path;
        self
    }

    pub fn path(&self) -> &String {
        &self.path
    }
}
